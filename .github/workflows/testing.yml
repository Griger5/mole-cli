name: build_and_test

defaults:
  run:
    shell: bash

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 13 * * 4'
  release:
    types: [published]

jobs:
  debug_builds_ok:
    runs-on: ubuntu-latest

    steps:
       - uses: actions/checkout@v4
         with:
            submodules: recursive
            fetch-depth: 0
         
       - run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build/
       - run: cmake --build $GITHUB_WORKSPACE/build/
       - run: rm -rf $GITHUB_WORKSPACE/build/
       - run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build/ -DNO_DEPS=1
       - run: cmake --build $GITHUB_WORKSPACE/build/

  check_memory_leaks:
    needs: [debug_builds_ok]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install valgrind
        run: sudo apt install valgrind
      
      - name: Configure CMake
        run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build/ -DBUILD_TESTS=1
      
      - name: Build library
        run: cmake --build $GITHUB_WORKSPACE/build/
      
      - name: Run valgrind
        run: valgrind --leak-check=full --track-origins=yes --show-leak-kinds=all $GITHUB_WORKSPACE/build/molecli_check_leaks

  build_examples:
    needs: [debug_builds_ok]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Configure CMake
        run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build/
      
      - name: Build library
        run: cmake --build $GITHUB_WORKSPACE/build/

      - name: Install library
        run: cmake --install $GITHUB_WORKSPACE/build/
      
      - name: Build examples
        run: | 
          cmake -S $GITHUB_WORKSPACE/examples/ -B $GITHUB_WORKSPACE/examples/build/
          cmake --build $GITHUB_WORKSPACE/examples/build/

  build_and_test:
    needs: [debug_builds_ok]
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Configure CMake
        run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build/ -DBUILD_TESTS=1
      
      - name: Build library
        run: cmake --build $GITHUB_WORKSPACE/build/
      
      - name: Run tests
        run: |
          ctest --test-dir $GITHUB_WORKSPACE/build/ --output-on-failure
          $GITHUB_WORKSPACE/build/molecli_tests_scripting